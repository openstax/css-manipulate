/*

- within 1 block
- in 2 blocks but both have the same selector
- more-specific selector
- using !important
- check that it works in a pseudo-element selector

- order-of-operations

*/

#id123 { content: "kittens"; }
.this-should-not-matter { content: "BUG"; }

.in-one-block {
  content: "BUG";
  content: "kittens";
}

.in-two-blocks { content: "BUG"; }
.in-two-blocks { content: "kittens"; }

.in-more-specific-selector { content: "BUG1"; }
.in-more-specific-selector.more-specific { content: "kittens"; }
.in-more-specific-selector { content: "BUG2"; }

.using-important { content: "BUG1"; }
.using-important { content: "kittens" !important; }
.using-important { content: "BUG2"; }

.using-important-even-with-more-specific-selector.more-specific { content: "BUG1"; }
.using-important-even-with-more-specific-selector { content: "kittens" !important; }
.using-important-even-with-more-specific-selector.more-specific { content: "BUG2"; }

.in-pseudo-element::before(1) { content: "BUG"; }
.in-pseudo-element::before(1) { content: "kittens"; }

.in-pseudo-element::before(1)::after(1) { content: "BUG(this should show up in the after-pseudo but not the before pseudo element)"; }
.in-pseudo-element::before(1) { content: "kittens"; }
.in-pseudo-element::before(1)::after(1) { content: "kittens"; }
