$NUMBERED_EXERCISES_SEL_STR: 'exercise.conceptual, exercise.homework'; // TODO: construct me dynamically


@mixin end-of-chapter($which, $title, $exerciseSelStr) {

  &::after(#{$which}) {
    // STEP 2
    &::before {
      tag-name-set: "h2";
      class-add: "title";
      content: $title; // STEP 1
    }
    attrs-add: "data-type" "eoc-item";

    // STEP 4
    &::for-each(1, descendant, '> section') {
      &:has(#{$exerciseSelStr}) {
        &::before {
          tag-name-set: "h3";
          class-add: "section-title";
          content: descendant-context('> .title', text-contents());
        }
        class-add: "eoc-section";

        // STEP 3
        // Select the proper exercises to move here (all of the ones in the section)
        // the context for move-here is the current section.
        content: move-here($exerciseSelStr);
      }
    }
  } // ::for-each
}


@mixin generate-numbered-exercises($sel) {
  #{$sel} {
    // STEP 5
    &::before {
      class-add: "number";
      content: count-of-type('chapter', $sel);
    }

    > answer::before {

      // Make this thing a link to the exercise (STEP 10)
      tag-name-set: "a";
      attrs-add: "href" "#" parent-context(attr(id));

      // Number exercise answers (STEP 9)
      content:
        // Chapter number
        count-of-type('body', 'chapter')
        "."
        // Exercise number
        count-of-type('chapter', $sel);
    }

    // (STEP 10)
    &:has(> answer)::before {
      tag-name-set: "a";
      // attrs-add: "href" "#" descendant-context('> answer', attr-ensure(id));
      attrs-add: "href" "#" descendant-context('> answer', attr(id));
    }

  }
}

// Link target text (STEP 6)
@mixin generate-numbered-exercise-link-text($sel) {
  // Link target text (STEP 6)
  a:target(href, '#{$sel}') {
    content:
      "See Exercise "
      // Chapter number
      target-context(attr(href), count-of-type('body', 'chapter'))
      "."
      // Exercise number
      target-context(attr(href), count-of-type('chapter', $sel));
  }
}

// Wrap Lists with labels (STEP 7)
@mixin wrap-labeled-lists() {
  ol[data-label]::outside {
    &::before {
      tag-name-set: "label";
      class-add: "list-label";
      content: attr(data-label);
    }
    class-add: "list-wrapper";
  }
}


// Generate the CSS!


body {
  /* End-of-chapter collation */
  chapter {
    @include end-of-chapter(1, "Conceptual Questions", 'exercise.conceptual');
    @include end-of-chapter(2, "Homework Problems", 'exercise.homework');
  }

  // End-of-book answer key (STEP 9)
  &::after(1) {
    &::before {
      tag-name-set: "h1";
      content: "Answer Key";
    }
    content: move-here('answer');
  }
}


/* Exercise numbering */
@include generate-numbered-exercises($NUMBERED_EXERCISES_SEL_STR);
/* Link target text (STEP 6) */
@include generate-numbered-exercise-link-text($NUMBERED_EXERCISES_SEL_STR);

/* Wrap Lists with labels (STEP 7) */
@include wrap-labeled-lists();

/* Wrap the inside of notes with an element (STEP 8) */
note::inside {
  class-add: "note-inside";
}
