@NUMBERED_EXERCISES: 'exercise.conceptual' 'exercise.homework';
@NUMBERED_EXERCISES_SEL_STR: 'exercise.conceptual, exercise.homework'; // TODO: construct me dynamically


.end-of-chapter(@which, @title, @exerciseSelStr) {
  @exerciseSel: e(@exerciseSelStr);

  &::after(@{which}) {
    &::before {
      class-add: "title";
      content: @title;
    }
    attrs-add: "data-type" "eoc-item";

    &::for-each-descendant(1, '> section') {
      &:has(@{exerciseSel}) {
        &::before {
          class-add: "section-title";
          content: descendant-context('> .title', text-contents());
        }
        class-add: "eoc-section";

        // Select the proper exercises to move here (all of the ones in the section)
        // the context for move-here is the current section.
        content: move-here(@exerciseSelStr);
      }
    }
  } // for-each-descendant
}


.generate-numbered-exercises(@list, @i: 1) when (@i =< length(@list)) {
  @exerciseSel: e(extract(@list, @i));
  @{exerciseSel} {
    &::before {
      class-add: "number";
      content: ancestor-context('chapter', count-of-type(@NUMBERED_EXERCISES_SEL_STR));
    }

    > answer::before {

      // Make this thing a link to the exercise (STEP 10)
      tag-name-set: "a";
      attrs-add: "href" "#" parent-context(attr(id));

      // Number exercise answers (STEP 9)
      content:
        // Chapter number
        ancestor-context('body', count-of-type('chapter'))
        "."
        // Exercise number
        ancestor-context('chapter', count-of-type(@NUMBERED_EXERCISES_SEL_STR));
    }

    // (STEP 10)
    &:has(> answer)::before(1) {
      tag-name-set: "a";
      // attrs-add: "href" "#" descendant-context('> answer', attr-ensure(id));
      attrs-add: "href" "#" descendant-context('> answer', attr(id));
    }

  }
  .generate-numbered-exercises(@list, (@i + 1));
}



// Generate the CSS!


body {
  /* End-of-chapter collation */
  chapter {
    .end-of-chapter(1, "Conceptual Questions", 'exercise.conceptual');
    .end-of-chapter(2, "Homework Problems", 'exercise.homework');
  }

  // End-of-book answer key (STEP 9)
  &::after(1) {
    &::before { content: "Answer Key"; }
    content: move-here('answer');
  }
}


// Link target text
@hack1: e(%("(href, '%s')", @NUMBERED_EXERCISES_SEL_STR));
a:target@{hack1} {
  content:
    "See Exercise "
    // Chapter number
    target-context(attr(href), ancestor-context('body', count-of-type('chapter')))
    "."
    // Exercise number
    target-context(attr(href), ancestor-context('chapter', count-of-type(@NUMBERED_EXERCISES_SEL_STR)));
}

/* Exercise numbering */
.generate-numbered-exercises(@NUMBERED_EXERCISES);


/* Wrap Lists with labels (STEP 7) */
ol[data-label]::outside(1) {
  &::before(1) {
    class-add: "list-label";
    content: attr(data-label);
  }
  class-add: "list-wrapper";
}

/* Wrap the inside of notes with an element (STEP 8) */
note::inside(1) {
  class-add: "note-body";
}
